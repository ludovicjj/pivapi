security:
    encoders:
        App\Domain\Entity\User:
            algorithm: bcrypt
    providers:
        users_in_db:
            entity: { class: App\Domain\Entity\User }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern:  ^/api/login$
            stateless: true
            anonymous: true
            provider: users_in_db
            guard:
                authenticators:
                    - App\Domain\Security\LoginAuthenticator

        api:
            pattern: ^/
            stateless: true
            provider: users_in_db
            guard:
                authenticators:
                    - App\Domain\Security\JWTAuthenticator

        main:
            anonymous: lazy

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login,      roles: IS_AUTHENTICATED_ANONYMOUSLY,    methods: [POST] }
        # - { path: ^/profile, roles: ROLE_USER }
